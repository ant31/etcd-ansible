# CONF generated
# etcd_version: {{etcd_version}}
# etcd_binary_sha256: {{etcd_binary_sha256}}
# certs_serials:
#   peer: {{etcd_peer_cert_serial}}
#   client: {{etcd_client_cert_serial}}

# This is the configuration file for the etcd server.
# Human-readable name for this member.
name: {{etcd_name}}


# Initial cluster state ('new' or 'existing').
initial-cluster-state: '{{cluster_state|default("new")}}'

# Path to the data directory.
data-dir: {{ etcd_data_dir }}

# Path to the dedicated wal directory.
wal-dir:

# Number of committed transactions to trigger a snapshot to disk.
snapshot-count: {{ etcd_snapshot_count | default(10000) | int}}

# Time (in milliseconds) of a heartbeat interval.
heartbeat-interval: {{etcd_heatbeat_interval | default(250) | int}}

# Time (in milliseconds) for an election to timeout.
election-timeout: {{etcd_election_interval | default(5000) | int}}

# Raise alarms when backend size exceeds the given quota. 0 means use the
# default quota.
quota-backend-bytes: {{ etcd_quota_backend_bytes | default(0) }}

# List of comma separated URLs to listen on for peer traffic.
listen-peer-urls: https://{{ etcd_address }}:{{etcd_ports['peer']}}

# List of comma separated URLs to listen on for client traffic.
listen-client-urls: https://{{ etcd_address }}:{{etcd_ports['client']}},https://127.0.0.1:{{etcd_ports['client']}}

# Maximum number of snapshot files to retain (0 is unlimited).
max-snapshots: {{etcd_max_snapshots | default(5) | int}}

# Maximum number of wal files to retain (0 is unlimited).
max-wals: {{etcd_max_wals | default(5) | int}}

# Comma-separated white list of origins for CORS (cross-origin resource sharing).
# cors:

# List of this member's peer URLs to advertise to the rest of the cluster.
# The URLs needed to be a comma-separated list.
initial-advertise-peer-urls: {{ etcd_peer_url }}

# List of this member's client URLs to advertise to the public.
# The URLs needed to be a comma-separated list.
advertise-client-urls: {{ etcd_client_url }}

# Initial cluster configuration for bootstrapping.
initial-cluster: {{ etcd_peer_addresses }}

# Initial cluster token for the etcd cluster during bootstrap.
initial-cluster-token: {{cluster_token|default(etcd_cluster_name)}}

# Reject reconfiguration requests that would cause quorum loss.
strict-reconfig-check: true

# Accept etcd V2 client requests
enable-v2: false
metrics: {{etcd_metrics | default("basic")}}
# Enable runtime profiling data via HTTP server
enable-pprof: false

# Valid values include 'on', 'readonly', 'off'
proxy: 'off'

client-transport-security:
  # Path to the client server TLS cert file.
  cert-file: {{etcd_cert_paths.server.cert}}

  # Path to the client server TLS key file.
  key-file: {{etcd_cert_paths.server.key}}

  # Path to the client server TLS trusted CA cert file.
  trusted-ca-file: {{etcd_cert_paths.server.ca}}

  # Enable client cert authentication.
  client-cert-auth: {{ etcd_secure_client | default(true) | bool  }}

  # Client TLS using generated certificates
  auto-tls: false

peer-transport-security:
  # Path to the peer server TLS cert file.
  cert-file: {{etcd_cert_paths.peer.cert}}

  # Path to the peer server TLS key file.
  key-file: {{etcd_cert_paths.peer.key}}

  # Path to the peer server TLS trusted CA cert file.
  trusted-ca-file: {{etcd_cert_paths.peer.ca}}

  # Enable peer client cert authentication.
  client-cert-auth: {{ etcd_peer_client_auth | default(true) | bool  }}

  # Peer TLS using generated certificates.
  auto-tls: false

# Enable debug-level logging for etcd.
debug: false

logger: zap

# Specify 'stdout' or 'stderr' to skip journald logging even when running under systemd.
log-outputs: [stdout]

# Force to create a new one member cluster.
force-new-cluster: false

auto-compaction-mode: periodic
{% if etcd_version is version('v3.3.0', '<') %}
# int {{etcd_version}}
auto-compaction-retention: {{ etcd_compaction_retention | default("1") | int}}
{% else %}
# str {{etcd_version}}
auto-compaction-retention: "{{ etcd_compaction_retention | default("1") | string}}"
{% endif %}
