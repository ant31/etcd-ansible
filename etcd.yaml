---
# - hosts: etcd-all
#   gather_facts: False
#   tasks:
#     - name: gather hosts networks
#       setup:
#         gather_subset: network

# Install the certs tools
# Optionally prepare all certificates
- hosts: etcd-cert-managers
  any_errors_fatal: "{{ any_errors_fatal | default(true) }}"
  roles:
    # Create the CA certs
    - name: etcd/certs/ca
      tags:
        - etcd-ca
        - etcd-certs
        - etcd-certs-init

    # Pre generate all certs
    - name: etcd/certs
      when:
        - etcd_prepare_certs | default(false) | bool
      tags:
        - etcd-certs
        - etcd-certs-init

# Install the etcd cluster
- hosts: etcd
  vars:
    etcd_clusters:
      - name: k8s
        ports: {client: 2379, peer: 2380}
      - name: k8s-event
        ports: {client: 2381, peer: 2382}

  roles:
    - name: etcd
    - name: etcd/certs/fetch
      tags:
        - etcd-certs
  tasks:
    - include_role:
        name: etcd/cluster
      loop: "{{etcd_clusters}}"
      loop_control:
        loop_var: cluster
      vars:
        cluster_name: "{{cluster.name}}"
        etcd_ports: "{{cluster.ports}}"


# # install the etcd client certificates
# - hosts: etcd-clients
#   roles:
#     - name: etcd/certs/fetch
#       vars:
#         etcd_client_only: true


# - hosts: etcd
#   vars:
#     etcd_cert_dir: "{{ etcd_config_dir }}/ssl"
#     etcd_config_dir: /etc/etcd
#   tasks:
#     - name: create cert_directory server
#       file:
#         path: "{{etcd_cert_dir}}/peers"
#         state: directory

#     - name: install server_certs
#       shell: echo "{{etcd_certs_tarball}}" | base64 -d > {{etcd_cert_dir}}/{{inventory_hostname}}.tar.bz2
#       changed_when: false

#     - name: unpack certs
#       unarchive:
#         remote_src: true
#         src: "{{etcd_cert_dir}}/peers/{{inventory_hostname}}.tar.bz2"
#         dest: "{{etcd_cert_dir}}/peers"

# - hosts: etcd-clients
#   vars:
#     etcd_cert_dir: "{{ etcd_config_dir }}/ssl"
#     etcd_config_dir: /etc/etcd
#   tasks:
#     - name: create cert_directory
#       file:
#         path: "{{etcd_cert_dir}}/clients"
#         state: directory

#     - name: install client_certs
#       shell: echo "{{etcd_client_certs_tarball}}" | base64 -d > {{etcd_cert_dir}}/clients/{{inventory_hostname}}.tar.bz2
#       changed_when: false

#     - name: unpack certs
#       unarchive:
#         remote_src: true
#         src: "{{etcd_cert_dir}}/clients/{{inventory_hostname}}.tar.bz2"
#         dest: "{{etcd_cert_dir}}/clients"














# - hosts: etcd-all
#   any_errors_fatal: "{{ any_errors_fatal | default(true) }}"
#   tasks:
#     - include_role:
#         name: etcd/certs
#       tags:
#         - etcd
#         - etcd-certs


# - hosts: etcd-clients
#   any_errors_fatal: "{{ any_errors_fatal | default(true) }}"
#   tasks:
#     - include_role:
#         name: etcd/clients
#       tags: etcd-clients
